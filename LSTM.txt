clc
clear all
% Load the sensor data
load('data.mat');
sensorData = data(:, 1);

% Define the input layer and LSTM layer
inputSize = size(sensorData,1);
numHiddenUnits = 100;
numClasses = inputSize ;
layers = [
    sequenceInputLayer(inputSize)
    lstmLayer(numHiddenUnits)
    fullyConnectedLayer(numClasses)
    regressionLayer];

% Set the training options for the network
options = trainingOptions('adam', ...
    'MaxEpochs', 500, ...
    'MiniBatchSize', 128, ...
    'SequenceLength', 100, ...
    'Shuffle', 'every-epoch', ...
    'Plots', 'training-progress', ...
    'ExecutionEnvironment','gpu');

% Train the network
net = trainNetwork(sensorData, sensorData, layers, options);

% Remove noise from the gyroscope data
denoisedData = predict(net, sensorData);

% Compute the RMSE between the original and denoised data
rmse = sqrt(mean((sensorData - denoisedData).^2));

% Plot the original and denoised data
figure;
plot(sensorData(1:100, :), 'LineWidth', 1);
hold on;
plot(denoisedData(1:100, :), 'LineWidth', 1);
legend('Original', 'Denoised');
xlabel('Sample');
ylabel('Sensor Data');
title('Comparison of Original and Denoised Sensor Data');

write('gyro_data_denoised.txt', denoisedData, 'delimiter', '\t');